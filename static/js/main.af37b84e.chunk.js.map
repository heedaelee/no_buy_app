{"version":3,"sources":["component/Form.js","modules/reducer.js","container/FormContainer.js","component/common/Content.js","component/Brand.js","component/BrandList.js","container/BrandListContainer.js","component/Main.js","container/MainContainer.js","App.js","serviceWorker.js","index.js"],"names":["FormBlock","styled","div","Buttons","useStyles","makeStyles","theme","button","fontWeight","fontSize","h6","Form","title","content","onRemove","onSubmit","brand","page","goBack","classes","Typography","className","TextField","inputRef","node","autoComplete","required","id","name","label","fullWidth","defaultValue","Button","onClick","value","variant","color","addBrand","createAction","removeBrand","updateBrand","deleteBrand","changePage","initial","selectBrand","handleActions","state","action","produce","draft","console","log","payload","push","newBrand","item","brands","find","img","selectedI","index","indexNum","findIndex","splice","connect","dispatch","BrandActions","bindActionCreators","brandActions","uuid","Content","style","cursor","Brand","clickHandle","BrandList","i","map","key","useEffect","Wrapper","TextBlock","MenuText","h2","Header","Main","onChangePage","App","exact","path","component","MainContainer","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","persistConfig","storage","persistedReducer","persistReducer","reducer","store","createStore","persistor","persistStore","ReactDOM","render","loading","basename","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.af37b84e.chunk.js","sourcesContent":["import Button from \"@material-ui/core/Button\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\n\r\nconst FormBlock = styled.div``;\r\n\r\nconst Buttons = styled.div`\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  margin: 30px 0px 10px;\r\n`;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  button: {\r\n    fontWeight: \"bold\",\r\n    fontSize: \"1.1rem\",\r\n  },\r\n  h6: {\r\n    fontWeight: \"bold\",\r\n    fontSize: \"1.3rem\",\r\n  },\r\n}));\r\n\r\nconst Form = ({ onRemove, onSubmit, brand, page, goBack }) => {\r\n  const classes = useStyles();\r\n  let title;\r\n  let content;\r\n\r\n  return (\r\n    <FormBlock>\r\n      <Typography className={classes.h6}>브랜드 입력</Typography>\r\n      <TextField\r\n        inputRef={(node) => {\r\n          title = node;\r\n        }}\r\n        autoComplete=\"off\"\r\n        required\r\n        id=\"name\"\r\n        name=\"title\"\r\n        label=\"브랜드 명\"\r\n        fullWidth\r\n        defaultValue={brand ? brand.title : \"\"}\r\n      />\r\n      {/* <ImageBlock>\r\n        <Label>로고 이미지 등록</Label>\r\n        <Wallpaper style={{ fontSize: \"4rem\" }} />\r\n      </ImageBlock> */}\r\n      <TextField\r\n        id=\"content\"\r\n        name=\"content\"\r\n        label=\"등록 사유\"\r\n        inputRef={(node) => {\r\n          content = node;\r\n        }}\r\n        fullWidth\r\n        autoComplete=\"off\"\r\n        defaultValue={brand ? brand.content : \"\"}\r\n      />\r\n      <Buttons>\r\n        <Button onClick={goBack} className={classes.button}>\r\n          취소\r\n        </Button>\r\n        {page === \"editor\" && (\r\n          <Button onClick={onRemove} className={classes.button}>\r\n            삭제\r\n          </Button>\r\n        )}\r\n        <Button\r\n          className={classes.button}\r\n          onClick={() => onSubmit(title.value, content.value)}\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n        >\r\n          {page === \"register\" ? \"등록\" : \"수정\"}\r\n        </Button>\r\n      </Buttons>\r\n    </FormBlock>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n","import { createAction, handleActions } from \"redux-actions\";\r\n\r\nimport produce from \"immer\";\r\n\r\nconst initialState = {\r\n  selectedI: -1,\r\n  page: \"list\",\r\n  brands: [\r\n    {\r\n      id: 0,\r\n      title: \"프라다\",\r\n      content: \"제품 불량\",\r\n      img: 0,\r\n    },\r\n  ],\r\n};\r\n\r\n//ACTION TYPE\r\nconst ADD_BRAND = \"ADD_BRAND\";\r\nconst UPDATE_BRAND = \"UPDATE_BRAND\";\r\nconst DELETE_BRAND = \"DELETE_BRAND\";\r\nconst CHANGE_PAGE = \"CHANGE_PAGE\";\r\nconst INITIAL = \"INITIAL\";\r\nconst SELECT_BRAND = \"SELECT_BRAND\";\r\nconst REMOVE_BRAND = \"REMOVE_BRAND\";\r\n\r\n//액션 생성자\r\nexport const addBrand = createAction(ADD_BRAND); //brands. {}\r\nexport const removeBrand = createAction(REMOVE_BRAND); //brands []\r\nexport const updateBrand = createAction(UPDATE_BRAND); //brands. {}\r\nexport const deleteBrand = createAction(DELETE_BRAND); //id\r\nexport const changePage = createAction(CHANGE_PAGE); //page\r\nexport const initial = createAction(INITIAL);\r\nexport const selectBrand = createAction(SELECT_BRAND);\r\n\r\nexport default handleActions(\r\n  {\r\n    [ADD_BRAND]: (state, action) => {\r\n      return produce(state, (draft) => {\r\n        console.log(action.payload);\r\n        draft[\"brands\"].push(action.payload.newBrand);\r\n      });\r\n    },\r\n    [UPDATE_BRAND]: (state, action) => {\r\n      return produce(state, (draft) => {\r\n        let item = draft.brands.find(\r\n          (item) => item.id === action.payload.newBrand.id\r\n        );\r\n        const { title, content, img } = action.payload.newBrand;\r\n        item.title = title;\r\n        item.content = content;\r\n        item.img = img;\r\n        //item = {title,content,img} 이 불가\r\n      });\r\n    },\r\n    [CHANGE_PAGE]: (state, action) => {\r\n      return produce(state, (draft) => {\r\n        draft.page = action.payload;\r\n      });\r\n    },\r\n    [INITIAL]: (state) => {\r\n      return produce(state, (draft) => {\r\n        draft.selectedI = -1;\r\n      });\r\n    },\r\n    [SELECT_BRAND]: (state, action) => {\r\n      const index = action.payload;\r\n      return produce(state, (draft) => {\r\n        draft.selectedI = index;\r\n      });\r\n    },\r\n    [REMOVE_BRAND]: (state, action) => {\r\n      return produce(state, (draft)=> {\r\n       const indexNum = draft.brands.findIndex(item => item.id === action.payload)\r\n       draft.brands.splice(indexNum, 1)\r\n      })\r\n    }\r\n  },\r\n  initialState\r\n);\r\n","import Form from \"component/Form\";\r\nimport * as brandActions from \"modules/reducer\";\r\nimport React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport uuid from \"uuid/v4\";\r\n\r\nconst FormContainer = ({ brand, BrandActions, page }) => {\r\n  const handleSubmit = (title, content) => {\r\n    // console.log('title',title)\r\n    const newBrand = {\r\n      id: brand ? brand.id : uuid(),\r\n      title: title,\r\n      content: content,\r\n      img: 0,\r\n    };\r\n    page === \"register\"\r\n      ? BrandActions.addBrand({ newBrand })\r\n      : BrandActions.updateBrand({ newBrand });\r\n    BrandActions.changePage(\"list\");\r\n  };\r\n\r\n  const handleBack = () => {\r\n    console.log(\"뒤로\");\r\n    //페이지 이동 => 홈\r\n    BrandActions.changePage(\"list\");\r\n  };\r\n\r\n  const handleRemove = (id) => {\r\n    BrandActions.removeBrand(id);\r\n    BrandActions.changePage(\"list\");\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Form\r\n        brand={brand}\r\n        page={page}\r\n        onSubmit={handleSubmit}\r\n        BrandActions={BrandActions}\r\n        goBack={handleBack}\r\n        onRemove={handleRemove}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default connect(\r\n  (state) => ({\r\n    brand: state.brands[state.selectedI],\r\n  }),\r\n  (dispatch) => ({\r\n    BrandActions: bindActionCreators(brandActions, dispatch),\r\n  })\r\n)(FormContainer);\r\n","import styled from \"styled-components\";\r\n\r\nconst Content = styled.div`\r\n  max-width: 400px;\r\n  width: 80vw;\r\n  box-shadow: 0 2px 5px 0 rgba(0, 0, 0, 0.16), 0 2px 10px 0 rgba(0, 0, 0, 0.12);\r\n  padding: 10px;\r\n  margin-top: 10px;\r\n  text-align: center;\r\n  h3 {\r\n    color: #2962ff;\r\n    margin: 0;\r\n    padding: 0;\r\n  }\r\n`;\r\n\r\nexport default Content;\r\n","import React from \"react\";\r\nimport Content from \"component/common/Content\";\r\n\r\nconst style={cursor: \"pointer\"}\r\n\r\nconst Brand = ({ brand, index, clickHandle }) => (\r\n  <Content  style={style} onClick={() => clickHandle(index)}>\r\n    <h3>{brand.title}</h3>\r\n    <p>{brand.content}</p>\r\n  </Content>\r\n);\r\n\r\nexport default Brand;\r\n","import React from \"react\";\r\nimport Brand from \"component/Brand\";\r\n\r\nconst BrandList = ({ brands, BrandActions }) => {\r\n  const clickHandle = (i) => {\r\n    BrandActions.selectBrand(i)\r\n    BrandActions.changePage(\"editor\")\r\n  }\r\n\r\n\r\n  return (\r\n    <div>\r\n      {brands.map((brand, i) => (\r\n        <Brand\r\n          key={brand.id}\r\n          brand={brand}\r\n          index={i}\r\n          clickHandle={clickHandle}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n\r\n};\r\n\r\nexport default BrandList;\r\n","import React, { useEffect } from \"react\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport BrandList from \"component/BrandList\";\r\nimport * as BrandActions from \"modules/reducer\";\r\n\r\nconst BrandListContainer = ({ brands, BrandActions }) => {\r\n  useEffect(() => {\r\n    BrandActions.initial();\r\n  }, );\r\n  return (\r\n    <div>\r\n      <BrandList brands={brands} BrandActions={BrandActions} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default connect(\r\n  (state) => ({\r\n    brands: state.brands,\r\n  }),\r\n  (dispatch) => ({\r\n    BrandActions: bindActionCreators(BrandActions, dispatch),\r\n  })\r\n)(BrandListContainer);\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport FormContainer from \"container/FormContainer\";\r\nimport Content from \"component/common/Content\";\r\nimport BrandListContainer from \"container/BrandListContainer\";\r\n\r\nconst Wrapper = styled.div`\r\nwidth :99vw;\r\nbox-sizing: border-box;\r\ndisplay :flex;\r\nalign-items: center;\r\nflex-flow column;\r\n`;\r\n\r\nconst TextBlock = styled.div`\r\n  padding: 10px;\r\n`;\r\n\r\nconst MenuText = styled.h2`\r\n  display: inline;\r\n  margin: 0px 2px;\r\n  cursor: pointer;\r\n  &:hover {\r\n    color: #0984e3;\r\n  }\r\n`;\r\n\r\nconst Header = styled.div``;\r\n\r\nconst Main = ({ page, onChangePage }) => (\r\n  <Wrapper>\r\n    <Content>\r\n      <Header>\r\n        <TextBlock>\r\n          <MenuText onClick={() => onChangePage(\"list\")}>조회</MenuText>\r\n          <MenuText style={{ cursor: \"\" }}>|</MenuText>\r\n          <MenuText onClick={() => onChangePage(\"register\")}>등록</MenuText>\r\n        </TextBlock>\r\n      </Header>\r\n    </Content>\r\n    {page === \"list\" ? (\r\n      <BrandListContainer />\r\n    ) : (\r\n      <Content>\r\n        <FormContainer page={page} />\r\n      </Content>\r\n    )}\r\n  </Wrapper>\r\n);\r\n\r\nexport default Main;\r\n","/* eslint-disable react/react-in-jsx-scope */\r\nimport Main from \"component/Main\";\r\nimport * as brandActions from \"modules/reducer\";\r\nimport React from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\n\r\n\r\nconst MainContainer = ({ page, BrandActions }) => {\r\n  const handleChangePage = (value) => {\r\n    const page = value\r\n    BrandActions.changePage(page);\r\n  };\r\n\r\n\r\n  return (\r\n    <div>\r\n      <Main page={page}  onChangePage={handleChangePage} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default connect(\r\n  state => ({\r\n    page: state.page\r\n  }),\r\n  dispatch => ({\r\n    BrandActions: bindActionCreators(brandActions, dispatch)\r\n  })\r\n)(MainContainer);\r\n","import React from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\nimport MainContainer from \"container/MainContainer\";\n\n\n\nfunction App() {\n  return (\n    <Switch>\n      <Route exact path=\"/\" component={MainContainer} />\n      <Route />\n    </Switch>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  } else{\n    // 이곳! (else문 추가)\n    console.log(\"won't register serviceWorker. Current env:\", process.env.NODE_ENV);\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  console.log('serviceWorker is registered'); \n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n// import LocalServiceWorkerRegister from './sw-register';\nimport { BrowserRouter } from \"react-router-dom\";\nimport { createStore } from \"redux\";\nimport reducer from \"modules/reducer\";\nimport { Provider } from \"react-redux\";\nimport { persistStore, persistReducer } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\nimport { PersistGate } from \"redux-persist/integration/react\";\n\nconst persistConfig = {\n  key: \"root\",\n  storage\n};\n\nconst persistedReducer = persistReducer(persistConfig, reducer);\n\n\n// const store = createStore(reducer, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__())\n\nconst isDev = process.env.NODE_ENV === 'development'\nconst devTools = isDev && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__;\n\nconst store = createStore(persistedReducer);\nconst persistor = persistStore(store);\n\nReactDOM.render(\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <BrowserRouter basename='/no_buy_app'>\n          <App />\n        </BrowserRouter>\n      </PersistGate>\n    </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\nserviceWorker.register();\n// LocalServiceWorkerRegister();\n\n"],"sourceRoot":""}